/*! msturdy.net 2015-04-30 */
function addEvent(a, b, c) {
    if (a.addEventListener) a.addEventListener(b, c, !1); else {
        c.$$guid || (c.$$guid = addEvent.guid++), a.events || (a.events = {});
        var d = a.events[b];
        d || (d = a.events[b] = {}, a["on" + b] && (d[0] = a["on" + b])), d[c.$$guid] = c, 
        a["on" + b] = handleEvent;
    }
}

function removeEvent(a, b, c) {
    a.removeEventListener ? a.removeEventListener(b, c, !1) : a.events && a.events[b] && delete a.events[b][c.$$guid];
}

function handleEvent(a) {
    var b = !0;
    a = a || fixEvent(((this.ownerDocument || this.document || this).parentWindow || window).event);
    var c = this.events[a.type];
    for (var d in c) this.$$handleEvent = c[d], this.$$handleEvent(a) === !1 && (b = !1);
    return b;
}

function fixEvent(a) {
    return a.preventDefault = fixEvent.preventDefault, a.stopPropagation = fixEvent.stopPropagation, 
    a;
}

function get_viewport_height() {
    var a = !1;
    return self.innerHeight ? a = self.innerHeight : document.documentElement && document.documentElement.clientHeight ? a = document.documentElement.clientHeight : document.body && (a = document.body.clientHeight), 
    a;
}

function get_page_height() {
    var a = document.body, b = document.documentElement;
    return Math.max(a.scrollHeight, a.offsetHeight, b.clientHeight, b.scrollHeight, b.offsetHeight);
}

addEvent.guid = 1, fixEvent.preventDefault = function() {
    this.returnValue = !1;
}, fixEvent.stopPropagation = function() {
    this.cancelBubble = !0;
};

var handle_scroll = function() {
    var a = document.body.scrollTop, b = a + get_viewport_height(), c = get_page_height(), d = document.querySelector("footer");
    d.style.opacity = 20 > a || 20 > c - b ? 1 : 0;
};

addEvent(window, "scroll", handle_scroll);